name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test, Lint, and Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v6
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Commenting out Playwright-related steps until secrets issue is resolved
      # - name: Get Playwright version
      #   id: playwright-version
      #   run: echo "version=$(npx playwright --version | awk '{print $2}')" >> $GITHUB_OUTPUT

      # - name: Cache Playwright browsers
      #   uses: actions/cache@v4
      #   with:
      #     path: ~/.cache/ms-playwright
      #     key: playwright-${{ runner.os }}-${{ steps.playwright-version.outputs.version }}
      #     restore-keys: |
      #       playwright-${{ runner.os }}-

      # - name: Install Playwright browsers
      #   run: npx playwright install --with-deps

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        env:
          DB_SERVERLESS_URL: ${{ secrets.DB_SERVERLESS_URL || 'postgresql://dummy:dummy@localhost/dummy' }}
        run: npm run check

      - name: Run unit tests
        run: npm run test:unit

      - name: Build application
        env:
          DB_SERVERLESS_URL: ${{ secrets.DB_SERVERLESS_URL || 'postgresql://dummy:dummy@localhost/dummy' }}
        run: npm run build

  # Commenting out Playwright E2E job until secrets issue is resolved
  # playwright:
  #   name: Playwright E2E Tests
  #   runs-on: ubuntu-latest
  #   needs: test

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v6
  #       with:
  #         node-version: 20
  #         cache: 'npm'

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Get Playwright version
  #       id: playwright-version
  #       run: echo "version=$(npx playwright --version | awk '{print $2}')" >> $GITHUB_OUTPUT

  #     - name: Cache Playwright browsers
  #       uses: actions/cache@v4
  #       with:
  #         path: ~/.cache/ms-playwright
  #         key: playwright-${{ runner.os }}-${{ steps.playwright-version.outputs.version }}
  #         restore-keys: |
  #           playwright-${{ runner.os }}-

  #     - name: Install Playwright browsers
  #       run: npx playwright install --with-deps

  #     - name: Run Playwright tests
  #       env:
  #         DB_SERVERLESS_URL: ${{ secrets.DB_SERVERLESS_URL || 'postgresql://dummy:dummy@localhost/dummy' }}
  #       run: npm run test:integration

  #     - name: Upload Playwright report
  #       uses: actions/upload-artifact@v4
  #       if: always()
  #       with:
  #         name: playwright-report
  #         path: playwright-report/
  #         retention-days: 30
